# docker 套件管理
# 使用方法: just <task_name>

# 預設任務：顯示可用任務
default:
    @echo "📦 docker 套件管理"
    @echo "=========================="
    @echo ""
    @echo "可用任務："
    @echo "  🔍 check    - 檢查是否已安裝"
    @echo "  📦 install  - 執行安裝"
    @echo ""
    @echo "使用方法: just <task_name>"

# 檢查是否已安裝
check:
    #!/usr/bin/env bash
    echo "🔍 檢查 docker 安裝狀態..."
    if command -v docker &> /dev/null; then \
        echo "✅ docker 已安裝，版本: $(docker --version)"; \
    else \
        echo "❌ docker 尚未安裝"; \
    fi

# 執行安裝
install:
    #!/usr/bin/env bash
    echo "🚀 執行 docker 安裝..."
    just _do_install
    echo "✅ docker 安裝完成"


# 內部安裝邏輯
_do_install:
    #!/usr/bin/env bash
    # 移除舊版本
    echo "🧹 移除舊版本 Docker..."
    sudo apt remove -y docker docker-engine docker.io containerd runc 2>/dev/null || true

    # 安裝必要套件
    echo "📋 安裝必要套件..."
    sudo apt update
    sudo apt install -y \
        ca-certificates \
        curl \
        gnupg \
        lsb-release

    # 添加 Docker 官方 GPG 金鑰
    echo "🔑 添加 Docker GPG 金鑰..."
    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    # 設定 Docker 儲存庫
    echo "📦 設定 Docker 儲存庫..."
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    # 安裝 Docker Engine
    echo "🐳 安裝 Docker Engine..."
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    # 將當前用戶加入 docker 群組
    echo "👤 將用戶加入 docker 群組..."
    sudo usermod -aG docker $USER

    # 啟動並啟用 Docker 服務
    echo "🚀 啟動 Docker 服務..."
    sudo systemctl enable docker
    sudo systemctl start docker